#include <stdio.h>
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>
//For easier understanding when writing or reading during coding
#define READ_END 0
#define WRITE_END 1

int checkSize();

int main(int argc, char** argv)
{
    //create pipe
    int fd[2];
    //create process list
    pid_t pid;

    if(argc != 3)
    {
        printf("This application copies one file to a target file.\n"
               "In order to do this, there must be the file to be copied as the first argument and the target file to be copied to as the second argument");
        return 0;
    }
    int BUFFERSIZE = checkSize(argv[1]);
    printf("The size is %d", BUFFERSIZE)
    char write_msg[BUFFERSIZE];
    char read_msg[BUFFERSIZE];

    //Create a pipe
    if (pipe(fd) == -1)
    {
        fprintf(stderr, "Pipe failed");
        return -1;
    }
    //Fork a child process
    pid = fork();

    if (pid < 0)
    {
        fprintf(stderr, "Fork Failed");
        return 1;
    }
    //parent process
    if(pid > 0)
    {
        close(fd[READ_END]);

        //open file for writing purposes
        open("input.txt",O_WRONLY);
        //write to pipe
        write(fd[WRITE_END,argv[1], strlen(write_msg) + 1);

              //close pipe
              close(fd[WRITE_END]);
    }
    //child process
    else
    {
    

    }

    return 0;
}
int checkSize(char fname[])
{

    FILE * fp = fopen(fname, "r");
    //check if file exists
    if (fp == NULL)
    {
        printf("File not found");
        return -1;
    }
    fseek(fp, 0, SEEK_END);
    int size = ftell(fp);
    fclose(fp);
    return size;
}
